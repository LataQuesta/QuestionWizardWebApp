{
  "version": 3,
  "file": "countup.js-angular2.js",
  "sources": [
    "ng://countup.js-angular2/countUp.module.ts",
    "ng://countup.js-angular2/countUp.directive.ts"
  ],
  "sourcesContent": [
    "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CountUpDirective } from './countUp.directive';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        CountUpDirective\n    ],\n    exports: [\n        CountUpDirective\n    ]\n})\nexport class CountUpModule { }\n\n",
    "import { Directive, ElementRef, Input, HostListener, AfterViewInit } from '@angular/core';\nimport * as CountUp from 'countup.js';\n\n@Directive({\n  selector: '[countUp]'\n})\nexport class CountUpDirective implements AfterViewInit {\n\n  /**\n   * Optional extra configuration, such as easing.\n   */\n  @Input('countUp')\n  options: any;\n\n  /**\n   * Optional start value for the count. Defaults to zero.\n   */\n  @Input()\n  startVal: number;\n\n  /**\n   * The value to count up to.\n   */\n  private _endVal: number;\n\n  get endVal(): number {\n    return this._endVal;\n  }\n  @Input()\n  set endVal(value: number) {\n\n    this._endVal = value;\n\n    if (isNaN(value)) {\n      return;\n    }\n\n    if (!this.countUp) {\n      return;\n    }\n\n    this.countUp.update(value);\n  }\n\n  /**\n   * Optional duration of the animation. Default is two seconds.\n   */\n  @Input()\n  duration: number;\n\n  /**\n   * Optional number of decimal places. Default is two.\n   */\n  @Input()\n  decimals: number;\n\n  /**\n   * Optional flag for specifying whether the element should re-animate when clicked.\n   * Default is true.\n   */\n  @Input()\n  reanimateOnClick: boolean;\n\n  ngAfterViewInit() {\n    this.countUp = this.createCountUp(this.startVal, this.endVal, this.decimals, this.duration);\n    this.animate();\n  }\n\n  /**\n   * Re-animate if preference is set.\n   */\n  @HostListener('click')\n  onClick() {\n    if (this.reanimateOnClick) {\n      this.animate();\n    }\n  }\n\n  private countUp;\n\n  constructor(private el: ElementRef) {}\n\n  private createCountUp(sta, end, dec, dur) {\n    sta = sta || 0;\n    if (isNaN(sta)) sta = Number(sta.match(/[\\d\\-\\.]+/g).join('')); // strip non-numerical characters\n    end = end || 0;\n    if (isNaN(end)) end = Number(end.match(/[\\d\\-\\.]+/g).join('')); // strip non-numerical characters\n    dur = Number(dur) || 2;\n    dec = Number(dec) || 0;\n\n    // construct countUp\n    let countUp = new CountUp(this.el.nativeElement, sta, end, dec, dur, this.options);\n    if (end > 999) {\n      // make easing smoother for large numbers\n      countUp = new CountUp(this.el.nativeElement, sta, end - 100, dec, dur / 2, this.options);\n    }\n\n    return countUp;\n  }\n\n  private animate() {\n    this.countUp.reset();\n    if (this.endVal > 999) {\n      this.countUp.start(() => this.countUp.update(this.endVal));\n    } else {\n      this.countUp.start();\n    }\n  }\n}\n"
  ],
  "names": [],
  "mappings": "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"
}
